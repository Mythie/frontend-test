/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

*, *::after, *::before {
  box-sizing: border-box; }

html, body {
  background: #f6f6f6; }

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding: 0 20px; }
  @media screen and (min-width: 1170px) {
    .container {
      padding: 0; } }

header {
  padding: 20px 0 0 0; }

img.img-responsive {
  width: 100%; }

img.image-item:hover {
  opacity: 0.8;
  transition: 0.5s; }

.grid {
  overflow: hidden;
  margin: 0 -10px; }

.grid-item {
  width: calc(100% - 20px);
  margin: 10px; }
  @media screen and (min-width: 768px) {
    .grid-item {
      float: left; } }
  @media screen and (min-width: 768px) {
    .grid-item.quarter {
      width: calc(25% - 20px); } }
  @media screen and (min-width: 768px) {
    .grid-item.half {
      width: calc(50% - 20px); } }

.icon-item {
  display: flex;
  align-items: center; }
  @media screen and (max-width: 1365px) {
    .icon-item img.icon {
      display: inline-block;
      margin: 0 20px 0 0; } }
  @media screen and (max-width: 1365px) {
    .icon-item.grid-item {
      width: 100%; } }
  @media screen and (min-width: 1366px) {
    .icon-item {
      display: block; } }

html, body {
  color: #191919;
  font-family: 'Muli', serif;
  font-weight: 600;
  font-size: 14px;
  line-height: 1.5; }
  @media screen and (min-width: 1920px) {
    html, body {
      font-size: 16px; } }

h1, h2, h3, h4, h5, h6 {
  line-height: 1.5; }

h2 {
  color: #e5e5e5;
  font-size: 36px; }

h4 {
  color: #27198c;
  font-family: 'Roboto Slab', serif;
  font-size: 12px; }

p.highlight {
  color: #27198c;
  font-weight: 900;
  font-size: 22px;
  margin: 20px 0; }
  @media screen and (min-width: 1920px) {
    p.highlight {
      font-size: 30px; } }

p.section {
  color: #bebebe;
  font-family: 'Roboto Slab', serif;
  font-size: 18px;
  text-transform: uppercase;
  letter-spacing: 1px; }

p.icon-label {
  color: #27198c;
  font-family: 'Roboto Slab', serif;
  font-size: 12px;
  text-transform: uppercase; }

button, input[type="button"], input[type="submit"] {
  color: #27198c;
  background: transparent;
  padding: 0;
  border: 1px solid #fe7010;
  height: 40px;
  overflow: hidden; }
  button:hover, input[type="button"]:hover, input[type="submit"]:hover {
    background: #27198c;
    color: white;
    border-color: #211576;
    transition: 0.5s ease-in; }
    button:hover span.icon, input[type="button"]:hover span.icon, input[type="submit"]:hover span.icon {
      background: #27198c !important;
      transition: 0.5s ease-in; }
  button span, input[type="button"] span, input[type="submit"] span {
    display: inline-block;
    line-height: 40px;
    height: 38px; }
  button span.message, input[type="button"] span.message, input[type="submit"] span.message {
    padding: 0 40px 0 20px;
    font-size: 10px;
    font-weight: bold;
    text-transform: uppercase; }
    @media screen and (min-width: 1920px) {
      button span.message, input[type="button"] span.message, input[type="submit"] span.message {
        font-size: 12px; } }
  button span.icon, input[type="button"] span.icon, input[type="submit"] span.icon {
    background: #fe7010;
    padding: 0 10px; }
    button span.icon object, input[type="button"] span.icon object, input[type="submit"] span.icon object {
      display: inline-block;
      height: 17px;
      width: 17px; }
    button span.icon img, input[type="button"] span.icon img, input[type="submit"] span.icon img {
      display: inline-block;
      height: 17px;
      width: 17px; }

img.icon {
  height: 37px;
  width: 37px; }
  @media screen and (min-width: 768px) {
    img.icon {
      height: 40px;
      width: 40px; } }
  @media screen and (min-width: 1366px) {
    img.icon {
      height: 70px;
      width: 70px; } }
  @media screen and (min-width: 1920px) {
    img.icon {
      height: 80px;
      width: 80px; } }

img.center-block {
  display: block;
  margin: 0 auto; }

/* Margins */
.mt-0 {
  margin-top: 0 !important; }

.mt-10 {
  margin-top: 10px !important; }

.mb-0 {
  margin-bottom: 0 !important; }

.mb-10 {
  margin-bottom: 10px !important; }

/* Text Alignment */
.text-center {
  text-align: center; }

/* Display */
.hide {
  display: none; }

@media screen and (max-width: 767px) {
  .h-mobile {
    display: none; } }

@media screen and (max-width: 1365px) {
  .h-tablet {
    display: none; } }

#slider-bars {
  max-width: calc(100% - 20px);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: nowrap;
  margin-bottom: 20px; }

.slider-bar {
  height: 4px;
  width: 5vw;
  margin: 0 5px;
  background: #000; }

.slider-bar-active {
  background: #fe7010; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
